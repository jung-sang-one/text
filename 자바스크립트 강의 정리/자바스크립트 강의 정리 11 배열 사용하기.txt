배열 사용하기
배열에 엘리먼트 추가/삭제하기
기본적으로 배열의 앞과 뒤에서 엘리먼트를 추가하거나 삭제할 수 있음.

.push(element) : 배열의 뒤에 엘리먼트 추가
.pop() : 배열의 뒤에서 엘리먼트 삭제하고 리턴
.shift() : 배열의 앞에서 엘리먼트 삭제하고 리턴
.unshift(element) : 배열의 앞에 엘리먼트 추가

          var arr = ['a', 'b', 'c'];

arr.push('e');          // arr = ['a', 'b', 'c', 'e'] // 마지막에 추가
arr.unshift('i');       // arr = ['i', 'a', 'b', 'c', 'e'] // 처음에 추가

console.log(arr.pop());      // e가 출력되고 arr = ['i', 'a', 'b', 'c'] //마지막걸 출력하고 출력한걸 삭제
console.log(arr.shift());    // i가 출력되고 arr = ['a', 'b', 'c']   // 첫번째걸 출력 하고 출력한걸 삭제

arr=[1,2,3,4,5,]
arr.reverse(); // arr =[5,4,3,2,0] 가 출력된다
arr;             // arr =[5,4,3,2,0] 가 출력된다
arr.sort();     // arr = [0,2,3,4,5] 가 출력  //arr.sort((a,b)=>a-b)
arr;            // arr = [0,2,3,4,5] 가 출력

배열 붙이기, 검색하기

arr1=[1,2,3]
arr2=[4,2,6]
arr1.concat(arr2) //[1,2,3,4,2,6] //arr1과 arr2 붙지만 다시 arr1이나 2만검색할경우 원래의 값만 나타냄

arr3=arr1.concat(arr2) //[1,2,3,4,2,6] // 이렇게 초기화를 시켜주면 arr3 에 저장된다

arr.indexOf(element) : arr에서 element가 있는 첫 위치를 검색
arr3.indexOf(2); // 1 // arr3에 두번째에 1의 위치에 2 가있으므로 1이 출력

arr.lastIndexOf(element) : arr에서 element가 있는 마지막 위치를 검색
arr3.indexOf(2); // 4 // arr3에 다섯번째에 4의 위치에 2 가있으므로 4가 출력

문자열 split 함수
문자열을 구분자(separator)로 나눠서 각각을 담은 배열을 반환하는 함수
Code

var str="1,2,3,4,5"; 
arr = str.split(",");
결과

arr = ["1", "2", "3", "4", "5"];

var a =arr.join(+) //1+2+3+4+5